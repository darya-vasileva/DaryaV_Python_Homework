import math

# 1)Работа со списками
# Выведите на экран второй и второй с конца элементы через запятую.
# Продумайте такое решение, которое можно было бы применить
# к списку любой длины

employee_list = ["Jonh Snow", "Piter Pen", "Drakula",
                 "IvanIV", "Moana", "Juilet"]

print(employee_list[1] + ', ' + employee_list[-2])

# 2)Деление на три
# Создайте функцию dev_by_three, которая принимает один аргумент — число — и
# возвращает 'Да', если оно делится на три, и 'Нет' — если не делится.
# В этом же файле напишите код, который вызывает функцию и передает в нее число
# Результат вызова функции должен сохраняться в переменную.
# Выведите в консоль сообщение в формате: Делится ли на три <число>? - Нет | Да


def dev_by_three(number):
    return "Да" if number % 3 == 0 else "Нет"


num = int(input("Введите число: "))
result = dev_by_three(num)
print(f"Делится ли на три {num}? - {result}")

# 3) Округление

# Напишите функцию min_boxes, которая принимает одно число — количество
# предметов — и возвращает минимальное количество коробок, необходимых для
# упаковки этих предметов, если в одну коробку помещается не более пяти
# предметов. Используйте функцию ceil из модуля math, чтобы округлить
# количество коробок до ближайшего целого числа вверх


# import math

def min_boxes(items):
    return math.ceil(items / 5)


num_items = int(input("Количество предметов: "))
print(f"Минимальное количество коробок: {min_boxes(num_items)}")

# 4)Два делителя

# Напишите функцию check_divisibility, которая принимает одно число — n
#  — и выводит все числа от 1 до n (включительно): Если число делится на 2,
# но не на 4, оно выводится с текстом «Делится на 2, но не на 4».
# Если число делится и на 2, и на 4, оно выводится с текстом «Делится и на 2,
# и на 4». Все остальные числа выводятся просто как есть.

n = int(input("Введите число:"))


def check_divisibility(n):
    for i in range(1, n + 1):
        if i % 4 == 0:
            print(f"{i} - Делится и на 2, и на 4")
        elif i % 2 == 0:
            print(f"{i} - Делится на 2, но не на 4")
        else:
            print(i)


check_divisibility(n)

# 5) Квартал

# Напишите функцию quarter_of_year(), которая принимает один аргумент — номер
# месяца (от 1 до 12) — и возвращает номер квартала, к которому относится этот
# месяц. Например, если передать 5, на выходе должно быть II квартал, так как
# май относится ко второму кварталу.


def quarter_of_year(month):
    if 1 <= month <= 3:
        return "I квартал"
    if 4 <= month <= 6:
        return "II квартал"
    if 7 <= month <= 9:
        return "III квартал"
    if 9 <= month <= 12:
        return "IV квартал"
    else:
        return "Неверный номер месяца"


try:
    month = int(input("Введите номер месяца (1-12): "))
    print(quarter_of_year(month))
except ValueError:
    print("Пожалуйста, введите целое число от 1 до 12.")

# 6) Фильтрация списка

# Дан список lst = [17, 34, 9, 21, 13, 48, 24, 7, 81, 29, 16, 12, 42].
# Необходимо вывести элементы, которые одновременно:
# больше 15, делятся на 3 без остатка.

lst = [17, 34, 9, 21, 13, 48, 24, 7, 81, 29, 16, 12, 42]

result = [x for x in lst if x > 15 and x % 3 == 0]

print(result)

# 7) Range

# Изучите статью: https://pythonchik.ru/osnovy/python-range. Создайте список
# [25, 20, 15, 10, 5] с помощью функции range() и выведите его на экран.

my_list = list(range(25, 0, -5))
print(my_list)


# 8) Поменять значения местами
# Создайте переменные:
# var_1 = 50
# var_2 = 5
# Напишите код, который меняет значение переменных местами
# (var_1 должен быть равен 5, а var_2 — 50).
# Выведите обновленные переменные на экран.

# Вариант 1 - использование временной переменной

var_1 = 50
var_2 = 5

temp = var_1
var_1 = var_2
var_2 = temp

print("var_1 =", var_1)
print("var_2 =", var_2)

# Вариант 2 - использование множественного присваивания

var_1 = 50
var_2 = 5

var_1, var_2 = var_2, var_1

print("var_1 =", var_1)
print("var_2 =", var_2)
